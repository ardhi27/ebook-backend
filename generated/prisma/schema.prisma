// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId   Int      @id @default(autoincrement())
  username String   @db.VarChar(50)
  password String
  userRole String
  Rental   Rental[]
}

model BooksCategory {
  categoryId Int    @id @default(autoincrement())
  category   String @unique

  books Books[]
}

model BooksAuthor {
  authorId Int    @id @default(autoincrement())
  author   String @db.VarChar(50)

  books Books[]
}

model Books {
  booksId    Int    @id @default(autoincrement())
  booksName  String @db.VarChar(50)
  authorId   Int
  categoryId Int

  author        BooksAuthor   @relation(fields: [authorId], references: [authorId])
  BooksCategory BooksCategory @relation(fields: [categoryId], references: [categoryId])
  Rental        Rental[]
}

model Rental {
  rentalId   Int      @id @default(autoincrement())
  userId     Int
  booksId    Int
  rentalDate DateTime
  returnDate DateTime
  status     String

  user User  @relation(fields: [userId], references: [userId])
  book Books @relation(fields: [booksId], references: [booksId])
}

//payment
//...
